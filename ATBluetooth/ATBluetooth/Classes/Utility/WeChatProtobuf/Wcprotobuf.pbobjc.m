// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: WCProtobuf.proto

#import "GPBProtocolBuffers_RuntimeSupport.h"
#import "Wcprotobuf.pbobjc.h"
// @@protoc_insertion_point(imports)

#pragma mark - WcprotobufRoot

@implementation WcprotobufRoot

@end

#pragma mark - WcprotobufRoot_FileDescriptor

static GPBFileDescriptor *WcprotobufRoot_FileDescriptor(void) {
  // This is called by +initialize so there is no need to worry
  // about thread safety of the singleton.
  static GPBFileDescriptor *descriptor = NULL;
  if (!descriptor) {
    GPBDebugCheckRuntimeVersion();
    descriptor = [[GPBFileDescriptor alloc] initWithPackage:@"MmBp"
                                                     syntax:GPBFileSyntaxProto2];
  }
  return descriptor;
}

#pragma mark - Enum MmBp_EmCmdId

GPBEnumDescriptor *MmBp_EmCmdId_EnumDescriptor(void) {
  static GPBEnumDescriptor *descriptor = NULL;
  if (!descriptor) {
    static GPBMessageEnumValueDescription values[] = {
      { .name = "EciNone", .number = MmBp_EmCmdId_EciNone },
      { .name = "EciReqAuth", .number = MmBp_EmCmdId_EciReqAuth },
      { .name = "EciReqSendData", .number = MmBp_EmCmdId_EciReqSendData },
      { .name = "EciReqInit", .number = MmBp_EmCmdId_EciReqInit },
      { .name = "EciRespAuth", .number = MmBp_EmCmdId_EciRespAuth },
      { .name = "EciRespSendData", .number = MmBp_EmCmdId_EciRespSendData },
      { .name = "EciRespInit", .number = MmBp_EmCmdId_EciRespInit },
      { .name = "EciPushRecvData", .number = MmBp_EmCmdId_EciPushRecvData },
      { .name = "EciPushSwitchView", .number = MmBp_EmCmdId_EciPushSwitchView },
      { .name = "EciPushSwitchBackgroud", .number = MmBp_EmCmdId_EciPushSwitchBackgroud },
      { .name = "EciErrDecode", .number = MmBp_EmCmdId_EciErrDecode },
    };
    static const char *extraTextFormatInfo = "\013\000c\244\000\001c\243\244\000\002c\243\250\000\003c\243\244\000\004c\244\244\000\005c\244\250\000\006c\244\244\000\007c\244\250\000\010c\244\252\000\tc\244\257\000\nc\243\246\000";
    descriptor = [GPBEnumDescriptor allocDescriptorForName:GPBNSStringifySymbol(MmBp_EmCmdId)
                                                   values:values
                                               valueCount:sizeof(values) / sizeof(GPBMessageEnumValueDescription)
                                             enumVerifier:MmBp_EmCmdId_IsValidValue
                                      extraTextFormatInfo:extraTextFormatInfo];
  }
  return descriptor;
}

BOOL MmBp_EmCmdId_IsValidValue(int32_t value__) {
  switch (value__) {
    case MmBp_EmCmdId_EciNone:
    case MmBp_EmCmdId_EciReqAuth:
    case MmBp_EmCmdId_EciReqSendData:
    case MmBp_EmCmdId_EciReqInit:
    case MmBp_EmCmdId_EciRespAuth:
    case MmBp_EmCmdId_EciRespSendData:
    case MmBp_EmCmdId_EciRespInit:
    case MmBp_EmCmdId_EciPushRecvData:
    case MmBp_EmCmdId_EciPushSwitchView:
    case MmBp_EmCmdId_EciPushSwitchBackgroud:
    case MmBp_EmCmdId_EciErrDecode:
      return YES;
    default:
      return NO;
  }
}

#pragma mark - Enum MmBp_EmErrorCode

GPBEnumDescriptor *MmBp_EmErrorCode_EnumDescriptor(void) {
  static GPBEnumDescriptor *descriptor = NULL;
  if (!descriptor) {
    static GPBMessageEnumValueDescription values[] = {
      { .name = "EecSystem", .number = MmBp_EmErrorCode_EecSystem },
      { .name = "EecNeedAuth", .number = MmBp_EmErrorCode_EecNeedAuth },
      { .name = "EecSessionTimeout", .number = MmBp_EmErrorCode_EecSessionTimeout },
      { .name = "EecDecode", .number = MmBp_EmErrorCode_EecDecode },
      { .name = "EecDeviceIsBlock", .number = MmBp_EmErrorCode_EecDeviceIsBlock },
      { .name = "EecServiceUnAvalibleInBackground", .number = MmBp_EmErrorCode_EecServiceUnAvalibleInBackground },
      { .name = "EecDeviceProtoVersionNeedUpdate", .number = MmBp_EmErrorCode_EecDeviceProtoVersionNeedUpdate },
      { .name = "EecPhoneProtoVersionNeedUpdate", .number = MmBp_EmErrorCode_EecPhoneProtoVersionNeedUpdate },
      { .name = "EecMaxReqInQueue", .number = MmBp_EmErrorCode_EecMaxReqInQueue },
      { .name = "EecUserExitWxAccount", .number = MmBp_EmErrorCode_EecUserExitWxAccount },
    };
    static const char *extraTextFormatInfo = "\n\000c\246\000\001c\250\000\002c\256\000\003c\246\000\004c\255\000\005c\275\000\006c\274\000\007c\273\000\010c\255\000\tc\261\000";
    descriptor = [GPBEnumDescriptor allocDescriptorForName:GPBNSStringifySymbol(MmBp_EmErrorCode)
                                                   values:values
                                               valueCount:sizeof(values) / sizeof(GPBMessageEnumValueDescription)
                                             enumVerifier:MmBp_EmErrorCode_IsValidValue
                                      extraTextFormatInfo:extraTextFormatInfo];
  }
  return descriptor;
}

BOOL MmBp_EmErrorCode_IsValidValue(int32_t value__) {
  switch (value__) {
    case MmBp_EmErrorCode_EecSystem:
    case MmBp_EmErrorCode_EecNeedAuth:
    case MmBp_EmErrorCode_EecSessionTimeout:
    case MmBp_EmErrorCode_EecDecode:
    case MmBp_EmErrorCode_EecDeviceIsBlock:
    case MmBp_EmErrorCode_EecServiceUnAvalibleInBackground:
    case MmBp_EmErrorCode_EecDeviceProtoVersionNeedUpdate:
    case MmBp_EmErrorCode_EecPhoneProtoVersionNeedUpdate:
    case MmBp_EmErrorCode_EecMaxReqInQueue:
    case MmBp_EmErrorCode_EecUserExitWxAccount:
      return YES;
    default:
      return NO;
  }
}

#pragma mark - Enum MmBp_EmAuthMethod

GPBEnumDescriptor *MmBp_EmAuthMethod_EnumDescriptor(void) {
  static GPBEnumDescriptor *descriptor = NULL;
  if (!descriptor) {
    static GPBMessageEnumValueDescription values[] = {
      { .name = "EamMd5", .number = MmBp_EmAuthMethod_EamMd5 },
      { .name = "EamMacNoEncrypt", .number = MmBp_EmAuthMethod_EamMacNoEncrypt },
    };
    static const char *extraTextFormatInfo = "\002\000c\243\000\001c\254\000";
    descriptor = [GPBEnumDescriptor allocDescriptorForName:GPBNSStringifySymbol(MmBp_EmAuthMethod)
                                                   values:values
                                               valueCount:sizeof(values) / sizeof(GPBMessageEnumValueDescription)
                                             enumVerifier:MmBp_EmAuthMethod_IsValidValue
                                      extraTextFormatInfo:extraTextFormatInfo];
  }
  return descriptor;
}

BOOL MmBp_EmAuthMethod_IsValidValue(int32_t value__) {
  switch (value__) {
    case MmBp_EmAuthMethod_EamMd5:
    case MmBp_EmAuthMethod_EamMacNoEncrypt:
      return YES;
    default:
      return NO;
  }
}

#pragma mark - Enum MmBp_EmInitRespFieldFilter

GPBEnumDescriptor *MmBp_EmInitRespFieldFilter_EnumDescriptor(void) {
  static GPBEnumDescriptor *descriptor = NULL;
  if (!descriptor) {
    static GPBMessageEnumValueDescription values[] = {
      { .name = "EirffUserNickName", .number = MmBp_EmInitRespFieldFilter_EirffUserNickName },
      { .name = "EirffPlatformType", .number = MmBp_EmInitRespFieldFilter_EirffPlatformType },
      { .name = "EirffModel", .number = MmBp_EmInitRespFieldFilter_EirffModel },
      { .name = "EirffOs", .number = MmBp_EmInitRespFieldFilter_EirffOs },
      { .name = "EirffTime", .number = MmBp_EmInitRespFieldFilter_EirffTime },
      { .name = "EirffTimeZone", .number = MmBp_EmInitRespFieldFilter_EirffTimeZone },
      { .name = "EirffTimeString", .number = MmBp_EmInitRespFieldFilter_EirffTimeString },
    };
    static const char *extraTextFormatInfo = "\007\000e\254\000\001e\254\000\002e\245\000\003e\242\000\004e\244\000\005e\250\000\006e\252\000";
    descriptor = [GPBEnumDescriptor allocDescriptorForName:GPBNSStringifySymbol(MmBp_EmInitRespFieldFilter)
                                                   values:values
                                               valueCount:sizeof(values) / sizeof(GPBMessageEnumValueDescription)
                                             enumVerifier:MmBp_EmInitRespFieldFilter_IsValidValue
                                      extraTextFormatInfo:extraTextFormatInfo];
  }
  return descriptor;
}

BOOL MmBp_EmInitRespFieldFilter_IsValidValue(int32_t value__) {
  switch (value__) {
    case MmBp_EmInitRespFieldFilter_EirffUserNickName:
    case MmBp_EmInitRespFieldFilter_EirffPlatformType:
    case MmBp_EmInitRespFieldFilter_EirffModel:
    case MmBp_EmInitRespFieldFilter_EirffOs:
    case MmBp_EmInitRespFieldFilter_EirffTime:
    case MmBp_EmInitRespFieldFilter_EirffTimeZone:
    case MmBp_EmInitRespFieldFilter_EirffTimeString:
      return YES;
    default:
      return NO;
  }
}

#pragma mark - Enum MmBp_EmInitScence

GPBEnumDescriptor *MmBp_EmInitScence_EnumDescriptor(void) {
  static GPBEnumDescriptor *descriptor = NULL;
  if (!descriptor) {
    static GPBMessageEnumValueDescription values[] = {
      { .name = "EisDeviceChat", .number = MmBp_EmInitScence_EisDeviceChat },
      { .name = "EisAutoSync", .number = MmBp_EmInitScence_EisAutoSync },
    };
    static const char *extraTextFormatInfo = "\002\000c\252\000\001c\250\000";
    descriptor = [GPBEnumDescriptor allocDescriptorForName:GPBNSStringifySymbol(MmBp_EmInitScence)
                                                   values:values
                                               valueCount:sizeof(values) / sizeof(GPBMessageEnumValueDescription)
                                             enumVerifier:MmBp_EmInitScence_IsValidValue
                                      extraTextFormatInfo:extraTextFormatInfo];
  }
  return descriptor;
}

BOOL MmBp_EmInitScence_IsValidValue(int32_t value__) {
  switch (value__) {
    case MmBp_EmInitScence_EisDeviceChat:
    case MmBp_EmInitScence_EisAutoSync:
      return YES;
    default:
      return NO;
  }
}

#pragma mark - Enum MmBp_EmPlatformType

GPBEnumDescriptor *MmBp_EmPlatformType_EnumDescriptor(void) {
  static GPBEnumDescriptor *descriptor = NULL;
  if (!descriptor) {
    static GPBMessageEnumValueDescription values[] = {
      { .name = "EptIos", .number = MmBp_EmPlatformType_EptIos },
      { .name = "EptAndriod", .number = MmBp_EmPlatformType_EptAndriod },
      { .name = "EptWp", .number = MmBp_EmPlatformType_EptWp },
      { .name = "EptS60V3", .number = MmBp_EmPlatformType_EptS60V3 },
      { .name = "EptS60V5", .number = MmBp_EmPlatformType_EptS60V5 },
      { .name = "EptS40", .number = MmBp_EmPlatformType_EptS40 },
      { .name = "EptBb", .number = MmBp_EmPlatformType_EptBb },
    };
    static const char *extraTextFormatInfo = "\007\000c\243\000\001c\247\000\002c\242\000\003c\243\"\000\004c\243\"\000\005c\243\000\006c\242\000";
    descriptor = [GPBEnumDescriptor allocDescriptorForName:GPBNSStringifySymbol(MmBp_EmPlatformType)
                                                   values:values
                                               valueCount:sizeof(values) / sizeof(GPBMessageEnumValueDescription)
                                             enumVerifier:MmBp_EmPlatformType_IsValidValue
                                      extraTextFormatInfo:extraTextFormatInfo];
  }
  return descriptor;
}

BOOL MmBp_EmPlatformType_IsValidValue(int32_t value__) {
  switch (value__) {
    case MmBp_EmPlatformType_EptIos:
    case MmBp_EmPlatformType_EptAndriod:
    case MmBp_EmPlatformType_EptWp:
    case MmBp_EmPlatformType_EptS60V3:
    case MmBp_EmPlatformType_EptS60V5:
    case MmBp_EmPlatformType_EptS40:
    case MmBp_EmPlatformType_EptBb:
      return YES;
    default:
      return NO;
  }
}

#pragma mark - Enum MmBp_EmDeviceDataType

GPBEnumDescriptor *MmBp_EmDeviceDataType_EnumDescriptor(void) {
  static GPBEnumDescriptor *descriptor = NULL;
  if (!descriptor) {
    static GPBMessageEnumValueDescription values[] = {
      { .name = "EddtManufatureSvr", .number = MmBp_EmDeviceDataType_EddtManufatureSvr },
      { .name = "EddtWxWristBand", .number = MmBp_EmDeviceDataType_EddtWxWristBand },
      { .name = "EddtWxDeviceHtmlChatView", .number = MmBp_EmDeviceDataType_EddtWxDeviceHtmlChatView },
    };
    static const char *extraTextFormatInfo = "\003\000d\255\000\001d\253\000\002d\264\000";
    descriptor = [GPBEnumDescriptor allocDescriptorForName:GPBNSStringifySymbol(MmBp_EmDeviceDataType)
                                                   values:values
                                               valueCount:sizeof(values) / sizeof(GPBMessageEnumValueDescription)
                                             enumVerifier:MmBp_EmDeviceDataType_IsValidValue
                                      extraTextFormatInfo:extraTextFormatInfo];
  }
  return descriptor;
}

BOOL MmBp_EmDeviceDataType_IsValidValue(int32_t value__) {
  switch (value__) {
    case MmBp_EmDeviceDataType_EddtManufatureSvr:
    case MmBp_EmDeviceDataType_EddtWxWristBand:
    case MmBp_EmDeviceDataType_EddtWxDeviceHtmlChatView:
      return YES;
    default:
      return NO;
  }
}

#pragma mark - Enum MmBp_EmSwitchViewOp

GPBEnumDescriptor *MmBp_EmSwitchViewOp_EnumDescriptor(void) {
  static GPBEnumDescriptor *descriptor = NULL;
  if (!descriptor) {
    static GPBMessageEnumValueDescription values[] = {
      { .name = "EsvoEnter", .number = MmBp_EmSwitchViewOp_EsvoEnter },
      { .name = "EsvoExit", .number = MmBp_EmSwitchViewOp_EsvoExit },
    };
    static const char *extraTextFormatInfo = "\002\000d\245\000\001d\244\000";
    descriptor = [GPBEnumDescriptor allocDescriptorForName:GPBNSStringifySymbol(MmBp_EmSwitchViewOp)
                                                   values:values
                                               valueCount:sizeof(values) / sizeof(GPBMessageEnumValueDescription)
                                             enumVerifier:MmBp_EmSwitchViewOp_IsValidValue
                                      extraTextFormatInfo:extraTextFormatInfo];
  }
  return descriptor;
}

BOOL MmBp_EmSwitchViewOp_IsValidValue(int32_t value__) {
  switch (value__) {
    case MmBp_EmSwitchViewOp_EsvoEnter:
    case MmBp_EmSwitchViewOp_EsvoExit:
      return YES;
    default:
      return NO;
  }
}

#pragma mark - Enum MmBp_EmViewId

GPBEnumDescriptor *MmBp_EmViewId_EnumDescriptor(void) {
  static GPBEnumDescriptor *descriptor = NULL;
  if (!descriptor) {
    static GPBMessageEnumValueDescription values[] = {
      { .name = "EviDeviceChatView", .number = MmBp_EmViewId_EviDeviceChatView },
      { .name = "EviDeviceChatHtmlView", .number = MmBp_EmViewId_EviDeviceChatHtmlView },
    };
    static const char *extraTextFormatInfo = "\002\000c\256\000\001c\262\000";
    descriptor = [GPBEnumDescriptor allocDescriptorForName:GPBNSStringifySymbol(MmBp_EmViewId)
                                                   values:values
                                               valueCount:sizeof(values) / sizeof(GPBMessageEnumValueDescription)
                                             enumVerifier:MmBp_EmViewId_IsValidValue
                                      extraTextFormatInfo:extraTextFormatInfo];
  }
  return descriptor;
}

BOOL MmBp_EmViewId_IsValidValue(int32_t value__) {
  switch (value__) {
    case MmBp_EmViewId_EviDeviceChatView:
    case MmBp_EmViewId_EviDeviceChatHtmlView:
      return YES;
    default:
      return NO;
  }
}

#pragma mark - Enum MmBp_EmSwitchBackgroundOp

GPBEnumDescriptor *MmBp_EmSwitchBackgroundOp_EnumDescriptor(void) {
  static GPBEnumDescriptor *descriptor = NULL;
  if (!descriptor) {
    static GPBMessageEnumValueDescription values[] = {
      { .name = "EsboEnterBackground", .number = MmBp_EmSwitchBackgroundOp_EsboEnterBackground },
      { .name = "EsboEnterForground", .number = MmBp_EmSwitchBackgroundOp_EsboEnterForground },
      { .name = "EsboSleep", .number = MmBp_EmSwitchBackgroundOp_EsboSleep },
    };
    static const char *extraTextFormatInfo = "\003\000d\257\000\001d\256\000\002d\245\000";
    descriptor = [GPBEnumDescriptor allocDescriptorForName:GPBNSStringifySymbol(MmBp_EmSwitchBackgroundOp)
                                                   values:values
                                               valueCount:sizeof(values) / sizeof(GPBMessageEnumValueDescription)
                                             enumVerifier:MmBp_EmSwitchBackgroundOp_IsValidValue
                                      extraTextFormatInfo:extraTextFormatInfo];
  }
  return descriptor;
}

BOOL MmBp_EmSwitchBackgroundOp_IsValidValue(int32_t value__) {
  switch (value__) {
    case MmBp_EmSwitchBackgroundOp_EsboEnterBackground:
    case MmBp_EmSwitchBackgroundOp_EsboEnterForground:
    case MmBp_EmSwitchBackgroundOp_EsboSleep:
      return YES;
    default:
      return NO;
  }
}

#pragma mark - MmBp_BaseRequest

@implementation MmBp_BaseRequest


typedef struct MmBp_BaseRequest__storage_ {
  uint32_t _has_storage_[0];
} MmBp_BaseRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[MmBp_BaseRequest class]
                                     rootClass:[WcprotobufRoot class]
                                          file:WcprotobufRoot_FileDescriptor()
                                        fields:NULL
                                    fieldCount:0
                                        oneofs:NULL
                                    oneofCount:0
                                         enums:NULL
                                     enumCount:0
                                        ranges:NULL
                                    rangeCount:0
                                   storageSize:sizeof(MmBp_BaseRequest__storage_)
                                    wireFormat:NO];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - MmBp_BaseResponse

@implementation MmBp_BaseResponse

@dynamic hasErrCode, errCode;
@dynamic hasErrMsg, errMsg;

typedef struct MmBp_BaseResponse__storage_ {
  uint32_t _has_storage_[1];
  int32_t errCode;
  NSString *errMsg;
} MmBp_BaseResponse__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "errCode",
        .number = MmBp_BaseResponse_FieldNumber_ErrCode,
        .hasIndex = 0,
        .flags = GPBFieldRequired | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeInt32,
        .offset = offsetof(MmBp_BaseResponse__storage_, errCode),
        .defaultValue.valueInt32 = 0,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "errMsg",
        .number = MmBp_BaseResponse_FieldNumber_ErrMsg,
        .hasIndex = 1,
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
        .offset = offsetof(MmBp_BaseResponse__storage_, errMsg),
        .defaultValue.valueString = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
    };
#if GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    const char *extraTextFormatInfo = NULL;
#else
    static const char *extraTextFormatInfo = "\002\001G\000\002F\000";
#endif  // GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[MmBp_BaseResponse class]
                                     rootClass:[WcprotobufRoot class]
                                          file:WcprotobufRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:sizeof(fields) / sizeof(GPBMessageFieldDescription)
                                        oneofs:NULL
                                    oneofCount:0
                                         enums:NULL
                                     enumCount:0
                                        ranges:NULL
                                    rangeCount:0
                                   storageSize:sizeof(MmBp_BaseResponse__storage_)
                                    wireFormat:NO
                           extraTextFormatInfo:extraTextFormatInfo];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - MmBp_BasePush

@implementation MmBp_BasePush


typedef struct MmBp_BasePush__storage_ {
  uint32_t _has_storage_[0];
} MmBp_BasePush__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[MmBp_BasePush class]
                                     rootClass:[WcprotobufRoot class]
                                          file:WcprotobufRoot_FileDescriptor()
                                        fields:NULL
                                    fieldCount:0
                                        oneofs:NULL
                                    oneofCount:0
                                         enums:NULL
                                     enumCount:0
                                        ranges:NULL
                                    rangeCount:0
                                   storageSize:sizeof(MmBp_BasePush__storage_)
                                    wireFormat:NO];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - MmBp_AuthRequest

@implementation MmBp_AuthRequest

@dynamic hasBaseRequest, baseRequest;
@dynamic hasMd5DeviceTypeAndDeviceId, md5DeviceTypeAndDeviceId;
@dynamic hasProtoVersion, protoVersion;
@dynamic hasAuthProto, authProto;
@dynamic hasAuthMethod, authMethod;
@dynamic hasAesSign, aesSign;
@dynamic hasMacAddress, macAddress;
@dynamic hasTimeZone, timeZone;
@dynamic hasLanguage, language;
@dynamic hasDeviceName, deviceName;

typedef struct MmBp_AuthRequest__storage_ {
  uint32_t _has_storage_[1];
  int32_t protoVersion;
  int32_t authProto;
  MmBp_EmAuthMethod authMethod;
  MmBp_BaseRequest *baseRequest;
  NSData *md5DeviceTypeAndDeviceId;
  NSData *aesSign;
  NSData *macAddress;
  NSString *timeZone;
  NSString *language;
  NSString *deviceName;
} MmBp_AuthRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "baseRequest",
        .number = MmBp_AuthRequest_FieldNumber_BaseRequest,
        .hasIndex = 0,
        .flags = GPBFieldRequired | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeMessage,
        .offset = offsetof(MmBp_AuthRequest__storage_, baseRequest),
        .defaultValue.valueMessage = nil,
        .dataTypeSpecific.className = GPBStringifySymbol(MmBp_BaseRequest),
        .fieldOptions = NULL,
      },
      {
        .name = "md5DeviceTypeAndDeviceId",
        .number = MmBp_AuthRequest_FieldNumber_Md5DeviceTypeAndDeviceId,
        .hasIndex = 1,
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeBytes,
        .offset = offsetof(MmBp_AuthRequest__storage_, md5DeviceTypeAndDeviceId),
        .defaultValue.valueData = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "protoVersion",
        .number = MmBp_AuthRequest_FieldNumber_ProtoVersion,
        .hasIndex = 2,
        .flags = GPBFieldRequired | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeInt32,
        .offset = offsetof(MmBp_AuthRequest__storage_, protoVersion),
        .defaultValue.valueInt32 = 0,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "authProto",
        .number = MmBp_AuthRequest_FieldNumber_AuthProto,
        .hasIndex = 3,
        .flags = GPBFieldRequired | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeInt32,
        .offset = offsetof(MmBp_AuthRequest__storage_, authProto),
        .defaultValue.valueInt32 = 0,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "authMethod",
        .number = MmBp_AuthRequest_FieldNumber_AuthMethod,
        .hasIndex = 4,
        .flags = GPBFieldRequired | GPBFieldTextFormatNameCustom | GPBFieldHasEnumDescriptor,
        .dataType = GPBDataTypeEnum,
        .offset = offsetof(MmBp_AuthRequest__storage_, authMethod),
        .defaultValue.valueEnum = MmBp_EmAuthMethod_EamMd5,
        .dataTypeSpecific.enumDescFunc = MmBp_EmAuthMethod_EnumDescriptor,
        .fieldOptions = NULL,
      },
      {
        .name = "aesSign",
        .number = MmBp_AuthRequest_FieldNumber_AesSign,
        .hasIndex = 5,
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeBytes,
        .offset = offsetof(MmBp_AuthRequest__storage_, aesSign),
        .defaultValue.valueData = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "macAddress",
        .number = MmBp_AuthRequest_FieldNumber_MacAddress,
        .hasIndex = 6,
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeBytes,
        .offset = offsetof(MmBp_AuthRequest__storage_, macAddress),
        .defaultValue.valueData = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "timeZone",
        .number = MmBp_AuthRequest_FieldNumber_TimeZone,
        .hasIndex = 7,
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
        .offset = offsetof(MmBp_AuthRequest__storage_, timeZone),
        .defaultValue.valueString = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "language",
        .number = MmBp_AuthRequest_FieldNumber_Language,
        .hasIndex = 8,
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
        .offset = offsetof(MmBp_AuthRequest__storage_, language),
        .defaultValue.valueString = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "deviceName",
        .number = MmBp_AuthRequest_FieldNumber_DeviceName,
        .hasIndex = 9,
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
        .offset = offsetof(MmBp_AuthRequest__storage_, deviceName),
        .defaultValue.valueString = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
    };
#if GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    const char *extraTextFormatInfo = NULL;
#else
    static const char *extraTextFormatInfo = "\n\001K\000\002X\000\003L\000\004I\000\005J\000\006G\000\007J\000\nH\000\013H\000\014J\000";
#endif  // GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[MmBp_AuthRequest class]
                                     rootClass:[WcprotobufRoot class]
                                          file:WcprotobufRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:sizeof(fields) / sizeof(GPBMessageFieldDescription)
                                        oneofs:NULL
                                    oneofCount:0
                                         enums:NULL
                                     enumCount:0
                                        ranges:NULL
                                    rangeCount:0
                                   storageSize:sizeof(MmBp_AuthRequest__storage_)
                                    wireFormat:NO
                           extraTextFormatInfo:extraTextFormatInfo];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - MmBp_AuthResponse

@implementation MmBp_AuthResponse

@dynamic hasBaseResponse, baseResponse;
@dynamic hasAesSessionKey, aesSessionKey;

typedef struct MmBp_AuthResponse__storage_ {
  uint32_t _has_storage_[1];
  MmBp_BaseResponse *baseResponse;
  NSData *aesSessionKey;
} MmBp_AuthResponse__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "baseResponse",
        .number = MmBp_AuthResponse_FieldNumber_BaseResponse,
        .hasIndex = 0,
        .flags = GPBFieldRequired | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeMessage,
        .offset = offsetof(MmBp_AuthResponse__storage_, baseResponse),
        .defaultValue.valueMessage = nil,
        .dataTypeSpecific.className = GPBStringifySymbol(MmBp_BaseResponse),
        .fieldOptions = NULL,
      },
      {
        .name = "aesSessionKey",
        .number = MmBp_AuthResponse_FieldNumber_AesSessionKey,
        .hasIndex = 1,
        .flags = GPBFieldRequired | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeBytes,
        .offset = offsetof(MmBp_AuthResponse__storage_, aesSessionKey),
        .defaultValue.valueData = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
    };
#if GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    const char *extraTextFormatInfo = NULL;
#else
    static const char *extraTextFormatInfo = "\002\001L\000\002M\000";
#endif  // GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[MmBp_AuthResponse class]
                                     rootClass:[WcprotobufRoot class]
                                          file:WcprotobufRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:sizeof(fields) / sizeof(GPBMessageFieldDescription)
                                        oneofs:NULL
                                    oneofCount:0
                                         enums:NULL
                                     enumCount:0
                                        ranges:NULL
                                    rangeCount:0
                                   storageSize:sizeof(MmBp_AuthResponse__storage_)
                                    wireFormat:NO
                           extraTextFormatInfo:extraTextFormatInfo];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - MmBp_InitRequest

@implementation MmBp_InitRequest

@dynamic hasBaseRequest, baseRequest;
@dynamic hasRespFieldFilter, respFieldFilter;
@dynamic hasChallenge, challenge;

typedef struct MmBp_InitRequest__storage_ {
  uint32_t _has_storage_[1];
  MmBp_BaseRequest *baseRequest;
  NSData *respFieldFilter;
  NSData *challenge;
} MmBp_InitRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "baseRequest",
        .number = MmBp_InitRequest_FieldNumber_BaseRequest,
        .hasIndex = 0,
        .flags = GPBFieldRequired | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeMessage,
        .offset = offsetof(MmBp_InitRequest__storage_, baseRequest),
        .defaultValue.valueMessage = nil,
        .dataTypeSpecific.className = GPBStringifySymbol(MmBp_BaseRequest),
        .fieldOptions = NULL,
      },
      {
        .name = "respFieldFilter",
        .number = MmBp_InitRequest_FieldNumber_RespFieldFilter,
        .hasIndex = 1,
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeBytes,
        .offset = offsetof(MmBp_InitRequest__storage_, respFieldFilter),
        .defaultValue.valueData = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "challenge",
        .number = MmBp_InitRequest_FieldNumber_Challenge,
        .hasIndex = 2,
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeBytes,
        .offset = offsetof(MmBp_InitRequest__storage_, challenge),
        .defaultValue.valueData = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
    };
#if GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    const char *extraTextFormatInfo = NULL;
#else
    static const char *extraTextFormatInfo = "\003\001K\000\002O\000\003I\000";
#endif  // GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[MmBp_InitRequest class]
                                     rootClass:[WcprotobufRoot class]
                                          file:WcprotobufRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:sizeof(fields) / sizeof(GPBMessageFieldDescription)
                                        oneofs:NULL
                                    oneofCount:0
                                         enums:NULL
                                     enumCount:0
                                        ranges:NULL
                                    rangeCount:0
                                   storageSize:sizeof(MmBp_InitRequest__storage_)
                                    wireFormat:NO
                           extraTextFormatInfo:extraTextFormatInfo];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - MmBp_InitResponse

@implementation MmBp_InitResponse

@dynamic hasBaseResponse, baseResponse;
@dynamic hasUserIdHigh, userIdHigh;
@dynamic hasUserIdLow, userIdLow;
@dynamic hasChalleangeAnswer, challeangeAnswer;
@dynamic hasInitScence, initScence;
@dynamic hasAutoSyncMaxDurationSecond, autoSyncMaxDurationSecond;
@dynamic hasUserNickName, userNickName;
@dynamic hasPlatformType, platformType;
@dynamic hasModel, model;
@dynamic hasOs, os;
@dynamic hasTime, time;
@dynamic hasTimeZone, timeZone;
@dynamic hasTimeString, timeString;

typedef struct MmBp_InitResponse__storage_ {
  uint32_t _has_storage_[1];
  uint32_t userIdHigh;
  uint32_t userIdLow;
  uint32_t challeangeAnswer;
  MmBp_EmInitScence initScence;
  uint32_t autoSyncMaxDurationSecond;
  MmBp_EmPlatformType platformType;
  int32_t time;
  int32_t timeZone;
  MmBp_BaseResponse *baseResponse;
  NSString *userNickName;
  NSString *model;
  NSString *os;
  NSString *timeString;
} MmBp_InitResponse__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "baseResponse",
        .number = MmBp_InitResponse_FieldNumber_BaseResponse,
        .hasIndex = 0,
        .flags = GPBFieldRequired | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeMessage,
        .offset = offsetof(MmBp_InitResponse__storage_, baseResponse),
        .defaultValue.valueMessage = nil,
        .dataTypeSpecific.className = GPBStringifySymbol(MmBp_BaseResponse),
        .fieldOptions = NULL,
      },
      {
        .name = "userIdHigh",
        .number = MmBp_InitResponse_FieldNumber_UserIdHigh,
        .hasIndex = 1,
        .flags = GPBFieldRequired | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
        .offset = offsetof(MmBp_InitResponse__storage_, userIdHigh),
        .defaultValue.valueUInt32 = 0U,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "userIdLow",
        .number = MmBp_InitResponse_FieldNumber_UserIdLow,
        .hasIndex = 2,
        .flags = GPBFieldRequired | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
        .offset = offsetof(MmBp_InitResponse__storage_, userIdLow),
        .defaultValue.valueUInt32 = 0U,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "challeangeAnswer",
        .number = MmBp_InitResponse_FieldNumber_ChalleangeAnswer,
        .hasIndex = 3,
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
        .offset = offsetof(MmBp_InitResponse__storage_, challeangeAnswer),
        .defaultValue.valueUInt32 = 0U,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "initScence",
        .number = MmBp_InitResponse_FieldNumber_InitScence,
        .hasIndex = 4,
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldHasEnumDescriptor,
        .dataType = GPBDataTypeEnum,
        .offset = offsetof(MmBp_InitResponse__storage_, initScence),
        .defaultValue.valueEnum = MmBp_EmInitScence_EisDeviceChat,
        .dataTypeSpecific.enumDescFunc = MmBp_EmInitScence_EnumDescriptor,
        .fieldOptions = NULL,
      },
      {
        .name = "autoSyncMaxDurationSecond",
        .number = MmBp_InitResponse_FieldNumber_AutoSyncMaxDurationSecond,
        .hasIndex = 5,
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
        .offset = offsetof(MmBp_InitResponse__storage_, autoSyncMaxDurationSecond),
        .defaultValue.valueUInt32 = 0U,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "userNickName",
        .number = MmBp_InitResponse_FieldNumber_UserNickName,
        .hasIndex = 6,
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
        .offset = offsetof(MmBp_InitResponse__storage_, userNickName),
        .defaultValue.valueString = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "platformType",
        .number = MmBp_InitResponse_FieldNumber_PlatformType,
        .hasIndex = 7,
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldHasEnumDescriptor,
        .dataType = GPBDataTypeEnum,
        .offset = offsetof(MmBp_InitResponse__storage_, platformType),
        .defaultValue.valueEnum = MmBp_EmPlatformType_EptIos,
        .dataTypeSpecific.enumDescFunc = MmBp_EmPlatformType_EnumDescriptor,
        .fieldOptions = NULL,
      },
      {
        .name = "model",
        .number = MmBp_InitResponse_FieldNumber_Model,
        .hasIndex = 8,
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
        .offset = offsetof(MmBp_InitResponse__storage_, model),
        .defaultValue.valueString = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "os",
        .number = MmBp_InitResponse_FieldNumber_Os,
        .hasIndex = 9,
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
        .offset = offsetof(MmBp_InitResponse__storage_, os),
        .defaultValue.valueString = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "time",
        .number = MmBp_InitResponse_FieldNumber_Time,
        .hasIndex = 10,
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeInt32,
        .offset = offsetof(MmBp_InitResponse__storage_, time),
        .defaultValue.valueInt32 = 0,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "timeZone",
        .number = MmBp_InitResponse_FieldNumber_TimeZone,
        .hasIndex = 11,
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeInt32,
        .offset = offsetof(MmBp_InitResponse__storage_, timeZone),
        .defaultValue.valueInt32 = 0,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "timeString",
        .number = MmBp_InitResponse_FieldNumber_TimeString,
        .hasIndex = 12,
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
        .offset = offsetof(MmBp_InitResponse__storage_, timeString),
        .defaultValue.valueString = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
    };
#if GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    const char *extraTextFormatInfo = NULL;
#else
    static const char *extraTextFormatInfo = "\r\001L\000\002J\000\003I\000\004P\000\005J\000\006Y\000\013L\000\014L\000\rE\000\016B\000\017D\000\020H\000\021J\000";
#endif  // GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[MmBp_InitResponse class]
                                     rootClass:[WcprotobufRoot class]
                                          file:WcprotobufRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:sizeof(fields) / sizeof(GPBMessageFieldDescription)
                                        oneofs:NULL
                                    oneofCount:0
                                         enums:NULL
                                     enumCount:0
                                        ranges:NULL
                                    rangeCount:0
                                   storageSize:sizeof(MmBp_InitResponse__storage_)
                                    wireFormat:NO
                           extraTextFormatInfo:extraTextFormatInfo];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - MmBp_SendDataRequest

@implementation MmBp_SendDataRequest

@dynamic hasBaseRequest, baseRequest;
@dynamic hasData_p, data_p;
@dynamic hasType, type;

typedef struct MmBp_SendDataRequest__storage_ {
  uint32_t _has_storage_[1];
  MmBp_EmDeviceDataType type;
  MmBp_BaseRequest *baseRequest;
  NSData *data_p;
} MmBp_SendDataRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "baseRequest",
        .number = MmBp_SendDataRequest_FieldNumber_BaseRequest,
        .hasIndex = 0,
        .flags = GPBFieldRequired | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeMessage,
        .offset = offsetof(MmBp_SendDataRequest__storage_, baseRequest),
        .defaultValue.valueMessage = nil,
        .dataTypeSpecific.className = GPBStringifySymbol(MmBp_BaseRequest),
        .fieldOptions = NULL,
      },
      {
        .name = "data_p",
        .number = MmBp_SendDataRequest_FieldNumber_Data_p,
        .hasIndex = 1,
        .flags = GPBFieldRequired | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeBytes,
        .offset = offsetof(MmBp_SendDataRequest__storage_, data_p),
        .defaultValue.valueData = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "type",
        .number = MmBp_SendDataRequest_FieldNumber_Type,
        .hasIndex = 2,
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldHasEnumDescriptor,
        .dataType = GPBDataTypeEnum,
        .offset = offsetof(MmBp_SendDataRequest__storage_, type),
        .defaultValue.valueEnum = MmBp_EmDeviceDataType_EddtManufatureSvr,
        .dataTypeSpecific.enumDescFunc = MmBp_EmDeviceDataType_EnumDescriptor,
        .fieldOptions = NULL,
      },
    };
#if GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    const char *extraTextFormatInfo = NULL;
#else
    static const char *extraTextFormatInfo = "\003\001K\000\002\000Data\000\003D\000";
#endif  // GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[MmBp_SendDataRequest class]
                                     rootClass:[WcprotobufRoot class]
                                          file:WcprotobufRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:sizeof(fields) / sizeof(GPBMessageFieldDescription)
                                        oneofs:NULL
                                    oneofCount:0
                                         enums:NULL
                                     enumCount:0
                                        ranges:NULL
                                    rangeCount:0
                                   storageSize:sizeof(MmBp_SendDataRequest__storage_)
                                    wireFormat:NO
                           extraTextFormatInfo:extraTextFormatInfo];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - MmBp_SendDataResponse

@implementation MmBp_SendDataResponse

@dynamic hasBaseResponse, baseResponse;
@dynamic hasData_p, data_p;

typedef struct MmBp_SendDataResponse__storage_ {
  uint32_t _has_storage_[1];
  MmBp_BaseResponse *baseResponse;
  NSData *data_p;
} MmBp_SendDataResponse__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "baseResponse",
        .number = MmBp_SendDataResponse_FieldNumber_BaseResponse,
        .hasIndex = 0,
        .flags = GPBFieldRequired | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeMessage,
        .offset = offsetof(MmBp_SendDataResponse__storage_, baseResponse),
        .defaultValue.valueMessage = nil,
        .dataTypeSpecific.className = GPBStringifySymbol(MmBp_BaseResponse),
        .fieldOptions = NULL,
      },
      {
        .name = "data_p",
        .number = MmBp_SendDataResponse_FieldNumber_Data_p,
        .hasIndex = 1,
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeBytes,
        .offset = offsetof(MmBp_SendDataResponse__storage_, data_p),
        .defaultValue.valueData = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
    };
#if GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    const char *extraTextFormatInfo = NULL;
#else
    static const char *extraTextFormatInfo = "\002\001L\000\002\000Data\000";
#endif  // GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[MmBp_SendDataResponse class]
                                     rootClass:[WcprotobufRoot class]
                                          file:WcprotobufRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:sizeof(fields) / sizeof(GPBMessageFieldDescription)
                                        oneofs:NULL
                                    oneofCount:0
                                         enums:NULL
                                     enumCount:0
                                        ranges:NULL
                                    rangeCount:0
                                   storageSize:sizeof(MmBp_SendDataResponse__storage_)
                                    wireFormat:NO
                           extraTextFormatInfo:extraTextFormatInfo];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - MmBp_RecvDataPush

@implementation MmBp_RecvDataPush

@dynamic hasBasePush, basePush;
@dynamic hasData_p, data_p;
@dynamic hasType, type;

typedef struct MmBp_RecvDataPush__storage_ {
  uint32_t _has_storage_[1];
  MmBp_EmDeviceDataType type;
  MmBp_BasePush *basePush;
  NSData *data_p;
} MmBp_RecvDataPush__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "basePush",
        .number = MmBp_RecvDataPush_FieldNumber_BasePush,
        .hasIndex = 0,
        .flags = GPBFieldRequired | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeMessage,
        .offset = offsetof(MmBp_RecvDataPush__storage_, basePush),
        .defaultValue.valueMessage = nil,
        .dataTypeSpecific.className = GPBStringifySymbol(MmBp_BasePush),
        .fieldOptions = NULL,
      },
      {
        .name = "data_p",
        .number = MmBp_RecvDataPush_FieldNumber_Data_p,
        .hasIndex = 1,
        .flags = GPBFieldRequired | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeBytes,
        .offset = offsetof(MmBp_RecvDataPush__storage_, data_p),
        .defaultValue.valueData = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "type",
        .number = MmBp_RecvDataPush_FieldNumber_Type,
        .hasIndex = 2,
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldHasEnumDescriptor,
        .dataType = GPBDataTypeEnum,
        .offset = offsetof(MmBp_RecvDataPush__storage_, type),
        .defaultValue.valueEnum = MmBp_EmDeviceDataType_EddtManufatureSvr,
        .dataTypeSpecific.enumDescFunc = MmBp_EmDeviceDataType_EnumDescriptor,
        .fieldOptions = NULL,
      },
    };
#if GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    const char *extraTextFormatInfo = NULL;
#else
    static const char *extraTextFormatInfo = "\003\001H\000\002\000Data\000\003D\000";
#endif  // GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[MmBp_RecvDataPush class]
                                     rootClass:[WcprotobufRoot class]
                                          file:WcprotobufRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:sizeof(fields) / sizeof(GPBMessageFieldDescription)
                                        oneofs:NULL
                                    oneofCount:0
                                         enums:NULL
                                     enumCount:0
                                        ranges:NULL
                                    rangeCount:0
                                   storageSize:sizeof(MmBp_RecvDataPush__storage_)
                                    wireFormat:NO
                           extraTextFormatInfo:extraTextFormatInfo];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - MmBp_SwitchViewPush

@implementation MmBp_SwitchViewPush

@dynamic hasBasePush, basePush;
@dynamic hasSwitchViewOp, switchViewOp;
@dynamic hasViewId, viewId;

typedef struct MmBp_SwitchViewPush__storage_ {
  uint32_t _has_storage_[1];
  MmBp_EmSwitchViewOp switchViewOp;
  MmBp_EmViewId viewId;
  MmBp_BasePush *basePush;
} MmBp_SwitchViewPush__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "basePush",
        .number = MmBp_SwitchViewPush_FieldNumber_BasePush,
        .hasIndex = 0,
        .flags = GPBFieldRequired | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeMessage,
        .offset = offsetof(MmBp_SwitchViewPush__storage_, basePush),
        .defaultValue.valueMessage = nil,
        .dataTypeSpecific.className = GPBStringifySymbol(MmBp_BasePush),
        .fieldOptions = NULL,
      },
      {
        .name = "switchViewOp",
        .number = MmBp_SwitchViewPush_FieldNumber_SwitchViewOp,
        .hasIndex = 1,
        .flags = GPBFieldRequired | GPBFieldTextFormatNameCustom | GPBFieldHasEnumDescriptor,
        .dataType = GPBDataTypeEnum,
        .offset = offsetof(MmBp_SwitchViewPush__storage_, switchViewOp),
        .defaultValue.valueEnum = MmBp_EmSwitchViewOp_EsvoEnter,
        .dataTypeSpecific.enumDescFunc = MmBp_EmSwitchViewOp_EnumDescriptor,
        .fieldOptions = NULL,
      },
      {
        .name = "viewId",
        .number = MmBp_SwitchViewPush_FieldNumber_ViewId,
        .hasIndex = 2,
        .flags = GPBFieldRequired | GPBFieldTextFormatNameCustom | GPBFieldHasEnumDescriptor,
        .dataType = GPBDataTypeEnum,
        .offset = offsetof(MmBp_SwitchViewPush__storage_, viewId),
        .defaultValue.valueEnum = MmBp_EmViewId_EviDeviceChatView,
        .dataTypeSpecific.enumDescFunc = MmBp_EmViewId_EnumDescriptor,
        .fieldOptions = NULL,
      },
    };
#if GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    const char *extraTextFormatInfo = NULL;
#else
    static const char *extraTextFormatInfo = "\003\001H\000\002L\000\003F\000";
#endif  // GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[MmBp_SwitchViewPush class]
                                     rootClass:[WcprotobufRoot class]
                                          file:WcprotobufRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:sizeof(fields) / sizeof(GPBMessageFieldDescription)
                                        oneofs:NULL
                                    oneofCount:0
                                         enums:NULL
                                     enumCount:0
                                        ranges:NULL
                                    rangeCount:0
                                   storageSize:sizeof(MmBp_SwitchViewPush__storage_)
                                    wireFormat:NO
                           extraTextFormatInfo:extraTextFormatInfo];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - MmBp_SwitchBackgroudPush

@implementation MmBp_SwitchBackgroudPush

@dynamic hasBasePush, basePush;
@dynamic hasSwitchBackgroundOp, switchBackgroundOp;

typedef struct MmBp_SwitchBackgroudPush__storage_ {
  uint32_t _has_storage_[1];
  MmBp_EmSwitchBackgroundOp switchBackgroundOp;
  MmBp_BasePush *basePush;
} MmBp_SwitchBackgroudPush__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "basePush",
        .number = MmBp_SwitchBackgroudPush_FieldNumber_BasePush,
        .hasIndex = 0,
        .flags = GPBFieldRequired | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeMessage,
        .offset = offsetof(MmBp_SwitchBackgroudPush__storage_, basePush),
        .defaultValue.valueMessage = nil,
        .dataTypeSpecific.className = GPBStringifySymbol(MmBp_BasePush),
        .fieldOptions = NULL,
      },
      {
        .name = "switchBackgroundOp",
        .number = MmBp_SwitchBackgroudPush_FieldNumber_SwitchBackgroundOp,
        .hasIndex = 1,
        .flags = GPBFieldRequired | GPBFieldTextFormatNameCustom | GPBFieldHasEnumDescriptor,
        .dataType = GPBDataTypeEnum,
        .offset = offsetof(MmBp_SwitchBackgroudPush__storage_, switchBackgroundOp),
        .defaultValue.valueEnum = MmBp_EmSwitchBackgroundOp_EsboEnterBackground,
        .dataTypeSpecific.enumDescFunc = MmBp_EmSwitchBackgroundOp_EnumDescriptor,
        .fieldOptions = NULL,
      },
    };
#if GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    const char *extraTextFormatInfo = NULL;
#else
    static const char *extraTextFormatInfo = "\002\001H\000\002R\000";
#endif  // GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[MmBp_SwitchBackgroudPush class]
                                     rootClass:[WcprotobufRoot class]
                                          file:WcprotobufRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:sizeof(fields) / sizeof(GPBMessageFieldDescription)
                                        oneofs:NULL
                                    oneofCount:0
                                         enums:NULL
                                     enumCount:0
                                        ranges:NULL
                                    rangeCount:0
                                   storageSize:sizeof(MmBp_SwitchBackgroudPush__storage_)
                                    wireFormat:NO
                           extraTextFormatInfo:extraTextFormatInfo];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end


// @@protoc_insertion_point(global_scope)
