// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: WCMmbpOpen.proto

#import "GPBProtocolBuffers.h"

#if GOOGLE_PROTOBUF_OBJC_GEN_VERSION != 30000
#error This file was generated by a different version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

CF_EXTERN_C_BEGIN

@class MmBpOpen_BaseResponse;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - WcmmbpOpenRoot

@interface WcmmbpOpenRoot : GPBRootObject

// The base class provides:
//   + (GPBExtensionRegistry *)extensionRegistry;
// which is an GPBExtensionRegistry that includes all the extensions defined by
// this file and all files that it depends on.

@end

#pragma mark - MmBpOpen_BaseResponse

typedef GPB_ENUM(MmBpOpen_BaseResponse_FieldNumber) {
  MmBpOpen_BaseResponse_FieldNumber_Errcode = 1,
  MmBpOpen_BaseResponse_FieldNumber_Errmsg = 2,
};

@interface MmBpOpen_BaseResponse : GPBMessage

@property(nonatomic, readwrite) BOOL hasErrcode;
@property(nonatomic, readwrite) int32_t errcode;

@property(nonatomic, readwrite) BOOL hasErrmsg;
@property(nonatomic, readwrite, copy, null_resettable) NSString *errmsg;

@end

#pragma mark - MmBpOpen_WristbandRequest

typedef GPB_ENUM(MmBpOpen_WristbandRequest_FieldNumber) {
  MmBpOpen_WristbandRequest_FieldNumber_StepDataArray = 1,
  MmBpOpen_WristbandRequest_FieldNumber_ExtData = 2,
};

@interface MmBpOpen_WristbandRequest : GPBMessage

// |stepDataArray| contains |MmBpOpen_WristbandRequest_MmBpOpen_StepDataItem|
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray *stepDataArray;
@property(nonatomic, readonly) NSUInteger stepDataArray_Count;

@property(nonatomic, readwrite) BOOL hasExtData;
@property(nonatomic, readwrite, copy, null_resettable) NSData *extData;

@end

#pragma mark - MmBpOpen_WristbandRequest_MmBpOpen_StepDataItem

typedef GPB_ENUM(MmBpOpen_WristbandRequest_MmBpOpen_StepDataItem_FieldNumber) {
  MmBpOpen_WristbandRequest_MmBpOpen_StepDataItem_FieldNumber_Step = 1,
  MmBpOpen_WristbandRequest_MmBpOpen_StepDataItem_FieldNumber_Timestamp = 2,
  MmBpOpen_WristbandRequest_MmBpOpen_StepDataItem_FieldNumber_TimeStampRtcYear = 3,
  MmBpOpen_WristbandRequest_MmBpOpen_StepDataItem_FieldNumber_TimeStampRtcMonth = 4,
  MmBpOpen_WristbandRequest_MmBpOpen_StepDataItem_FieldNumber_TimeStampRtcDay = 5,
  MmBpOpen_WristbandRequest_MmBpOpen_StepDataItem_FieldNumber_TimeStampRtcHour = 6,
  MmBpOpen_WristbandRequest_MmBpOpen_StepDataItem_FieldNumber_TimeStampRtcMinute = 7,
  MmBpOpen_WristbandRequest_MmBpOpen_StepDataItem_FieldNumber_TimeStampRtcSecond = 8,
};

@interface MmBpOpen_WristbandRequest_MmBpOpen_StepDataItem : GPBMessage

@property(nonatomic, readwrite) BOOL hasStep;
@property(nonatomic, readwrite) uint32_t step;

@property(nonatomic, readwrite) BOOL hasTimestamp;
@property(nonatomic, readwrite) uint32_t timestamp;

@property(nonatomic, readwrite) BOOL hasTimeStampRtcYear;
@property(nonatomic, readwrite) uint32_t timeStampRtcYear;

@property(nonatomic, readwrite) BOOL hasTimeStampRtcMonth;
@property(nonatomic, readwrite) uint32_t timeStampRtcMonth;

@property(nonatomic, readwrite) BOOL hasTimeStampRtcDay;
@property(nonatomic, readwrite) uint32_t timeStampRtcDay;

@property(nonatomic, readwrite) BOOL hasTimeStampRtcHour;
@property(nonatomic, readwrite) uint32_t timeStampRtcHour;

@property(nonatomic, readwrite) BOOL hasTimeStampRtcMinute;
@property(nonatomic, readwrite) uint32_t timeStampRtcMinute;

@property(nonatomic, readwrite) BOOL hasTimeStampRtcSecond;
@property(nonatomic, readwrite) uint32_t timeStampRtcSecond;

@end

#pragma mark - MmBpOpen_WristBandResponse

typedef GPB_ENUM(MmBpOpen_WristBandResponse_FieldNumber) {
  MmBpOpen_WristBandResponse_FieldNumber_BaseResp = 1,
};

@interface MmBpOpen_WristBandResponse : GPBMessage

@property(nonatomic, readwrite) BOOL hasBaseResp;
@property(nonatomic, readwrite, strong, null_resettable) MmBpOpen_BaseResponse *baseResp;

@end

#pragma mark - MmBpOpen_WristBandPush

@interface MmBpOpen_WristBandPush : GPBMessage

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

// @@protoc_insertion_point(global_scope)
